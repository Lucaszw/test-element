= stylesheet_link_tag "fancybox"
= stylesheet_link_tag "galleryView"

= javascript_include_tag "model_objects/imagesloaded"
= javascript_include_tag "model_objects/wookmark"
= javascript_include_tag "model_objects/scrollTo"
= javascript_include_tag "model_objects/model_objects"
  
#main_content
  #gallery_home_container.gallery_container
    #main{role: "main"}

      %ul#tiles
        - k = 0
        - @models.each do |model|
          %li
            .single{:id => "model_#{k}"}
              = link_to(model_objects_canvas_path(:modelid => model.id), :remote => true ) do
                = image_tag model.thumbnail.url, :id => "#{model.id}", :style => "width:170px;", :class => "model_image"
              %p{"data-no-turbolink" => ""}
                %h3{"data-no-turbolink" => ""}= link_to model.name, model_objects_single_path(:id => model.id)
          - k += 1
  :javascript
    (function ($){
        var oldwidth = $( window ).width();
        var newwidth = oldwidth - 180;
        $(".gallery_container").css("width", newwidth+"px");
        $( window ).resize(function() {
          var oldwidth = $( window ).width();
          var newwidth = oldwidth - 180;
          $(".gallery_container").css("width", newwidth+"px");
        });

        $.easing.elasout = function (x, t, b, c, d) {
          // Linear Easing effect :
            return c*t/d + b;
          };
     
        var $tiles = $('#tiles'),
            $handler = $('li', $tiles),
            $main = $('#main'),
            $window = $(window),
            $document = $(document),
            options = {
              autoResize: true, // This will auto-update the layout when the browser window is resized.
              container: $main, // Optional, used for some extra CSS styling
              offset: 20, // Optional, the distance between grid items
              itemWidth: 200 // Optional, the width of a grid item
            };
        $( "#scrollbutton" ).click(function() {
          $window.scrollTo( "#model_0",300, {easing:'elasout'}  );
        });

        /**
         * Reinitializes the wookmark handler after all images have loaded
         */
        function applyLayout() {
          $tiles.imagesLoaded(function() {
            // Destroy the old handler
            if ($handler.wookmarkInstance) {
              $handler.wookmarkInstance.clear();
            }
            // Create a new layout handler.
            $handler = $('li', $tiles);
            $handler.wookmark(options);
          });
        }

        /**
         * When scrolled all the way to the bottom, add more tiles
         */
        function onScroll() {
          // Get the page position :
            var scrolltop = $(document).scrollTop();
            if (scrolltop > window.mintop){
              $('#navigation').css("display", "block");
               $('#cssmenu').css("display", "block");
            }else {
              $('#navigation').css("display", "none");
              $('#cssmenu').css("display", "none");
            }

          // Check if we're within 100 pixels of the bottom edge of the broser window.
          var winHeight = window.innerHeight ? window.innerHeight : $window.height(), // iphone fix
              closeToBottom = ($window.scrollTop() + winHeight > $document.height() - 100);

          if (closeToBottom) {
            // Get the first then items from the grid, clone them, and add them to the bottom of the grid
            var $items = $('li', $tiles),
                $firstTen = $items.slice(0, 10);
            $tiles.append($firstTen.clone());

            applyLayout();
          }
        };

        // Call the layout function for the first time
        applyLayout();
        // Capture scroll event.
        $window.bind('scroll.wookmark', onScroll);
      })(jQuery);

#ajaxView


